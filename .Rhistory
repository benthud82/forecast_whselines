)
dataY_Train_box <- build.y(data_formula_boxes, data = dataTrain)
dataX_Test_box <- build.x(
data_formula_boxes,
data = dataTest,
contrasts = FALSE,
sparse = TRUE
)
dataY_Test_box <- build.y(data_formula_boxes, data = dataTest)
xgTrain_box <- xgb.DMatrix(data = dataX_Train_box,
label = dataY_Train_box)
xgVal_box <- xgb.DMatrix(data = dataX_Test_box,
label = dataY_Test_box)
model.xgb <-
xgb.train(
data = xgTrain_box,
objective = 'reg:linear',
eval_metric = 'rmse',
booster = 'gbtree',
watchlist = list(train = xgTrain_box, validate = xgVal_box),
early_stopping_rounds = 100,
nrounds = 1000,
num_parallel_tree = 20,
print_every_n = 20,
nthread = 16,
eta = .1,
max_depth = 8
)
dataTest.xgb <-
build.x(
data_formula_boxes,
data = dataTest,
contrasts = FALSE,
sparse = TRUE
)
prediction.xgb <- predict(model.xgb, newdata = dataTest.xgb)
dataTest$forecastlines <-
predict(model.xgb, newdata = dataTest.xgb)
dataTest$delta <- dataTest$forecastlines - dataTest$WHSLINES
dataTest$error_rate <-
(dataTest$forecastlines - dataTest$WHSLINES) / dataTest$WHSLINES
dataTest$error_rate_abs <-
abs((dataTest$forecastlines - dataTest$WHSLINES) / dataTest$WHSLINES)
currentDate <- Sys.Date()
csvFileName <-
paste("forecast_whselines_0",
var_whse,
"_",
currentDate,
".csv",
sep = "")
write.csv(dataTest, file = csvFileName)
sqlquery <- paste(
"SELECT
workday_workday AS WORKDAY,
workday_weekofmon AS MONTHWEEK,
workday_weekday AS WEEKDAY,
workday_dayofmon AS MONTHDAY,
workday_month AS MONTH,
YEAR(workday_date) AS YEAR,
workday_befvac AS BEFVAC,
workday_aftvac AS AFTVAC,
workday_befchrist AS BEFCHR,
workday_aftchrist AS AFTCHR,
0 as WHSLINES
FROM
gillingham.workdayofweek
LEFT JOIN gillingham.fcast_dateexcl on exclude_date = workday_date
WHERE
workday_date between '",
predstart_date,
"' and '",
predend_date,
"'
and (workday_befvac + workday_aftvac + workday_befchrist + workday_aftchrist) = 0
and exclude_date is null
ORDER BY workday_date",
sep = ""
)
preddata <- query(sqlquery)
data_new_lines <-
build.x(
data_formula_boxes,
data = preddata,
contrasts = FALSE,
sparse = TRUE
)
if (var_tier == '%') {
tierinsert = 'ALL'
} else{
tierinsert =var_tier
}
sqlquery <- paste(
"SELECT
0,workday_date, ",
s,
", '",
tierinsert,
"'
FROM
gillingham.workdayofweek
LEFT JOIN gillingham.fcast_dateexcl on exclude_date = workday_date
WHERE
workday_date between '",
predstart_date,
"' and '",
predend_date,
"'
and (workday_befvac + workday_aftvac + workday_befchrist + workday_aftchrist) = 0
and exclude_date is null
ORDER BY workday_date",
sep = ""
)
forecast_insert <- query(sqlquery)
forecast_insert$lines <-
predict(model.xgb, newdata = data_new_lines)
forecast_insert$seed02 <- 0
forecast_insert$seed03 <- 0
rmysql_update(mychannel,
forecast_insert,
'gillingham.forecast_whselines_tier',
verbose = FALSE)
}
}
#lapply( dbListConnections( dbDriver( drv = "MySQL")), dbDisconnect)
source('connections.R')
source('RMySQL_Update.R')
var_whse <- 'GB0001'
query <- function(...)
dbGetQuery(mychannel, ...)
date_today <- Sys.Date()
date_today <- '2019-03-31'
trainstart_date <- '2017-01-01'
trainend_date <- '2019-05-31'
predstart_date <- '2019-06-01'
predend_date <- '2019-06-31'
list_tier <- list('%','FLOW', 'BIN', 'PALL')
for (i in list_tier) {
var_tier <- i
sqlquery <- paste(
"SELECT
workday_date AS PRED_DATE,
workday_workday AS WORKDAY,
workday_weekofmon AS MONTHWEEK,
workday_weekday AS WEEKDAY,
workday_dayofmon AS MONTHDAY,
workday_month AS MONTH,
YEAR(workday_date) AS YEAR,
workday_befvac AS BEFVAC,
workday_aftvac AS AFTVAC,
workday_befchrist AS BEFCHR,
workday_aftchrist AS AFTCHR,
sum(linesgrouped_lines) AS WHSLINES
FROM
gillingham.workdayofweek
JOIN
gillingham.fcast_linesgrouped ON linesgrouped_date = workday_date
LEFT JOIN gillingham.fcast_dateexcl on exclude_date = workday_date
WHERE
workday_date  between '",
trainstart_date,
"' and '",
trainend_date,
"'
and (workday_befvac + workday_aftvac + workday_befchrist + workday_aftchrist) = 0
and exclude_date is null
and linesgrouped_tier LIKE '",
var_tier,
"'
GROUP BY workday_date",
sep = ""
)
data <- query(sqlquery)
for (s in 1:12) {
set.seed(s)
trainIndex <- createDataPartition(data$WHSLINES,
p = .75,
list = FALSE,
times = 1)
dataTrain <- data[trainIndex,]
dataTest  <- data[-trainIndex,]
data_formula_boxes <-
WHSLINES ~ WORKDAY + MONTHWEEK + WEEKDAY + MONTHDAY + MONTH + YEAR + BEFVAC + AFTVAC + BEFCHR + AFTCHR
#boxes data training
dataX_Train_box <- build.x(
data_formula_boxes,
data = dataTrain,
contrasts = FALSE,
sparse = TRUE
)
dataY_Train_box <- build.y(data_formula_boxes, data = dataTrain)
dataX_Test_box <- build.x(
data_formula_boxes,
data = dataTest,
contrasts = FALSE,
sparse = TRUE
)
dataY_Test_box <- build.y(data_formula_boxes, data = dataTest)
xgTrain_box <- xgb.DMatrix(data = dataX_Train_box,
label = dataY_Train_box)
xgVal_box <- xgb.DMatrix(data = dataX_Test_box,
label = dataY_Test_box)
model.xgb <-
xgb.train(
data = xgTrain_box,
objective = 'reg:linear',
eval_metric = 'rmse',
booster = 'gbtree',
watchlist = list(train = xgTrain_box, validate = xgVal_box),
early_stopping_rounds = 100,
nrounds = 1000,
num_parallel_tree = 20,
print_every_n = 20,
nthread = 16,
eta = .1,
max_depth = 8
)
dataTest.xgb <-
build.x(
data_formula_boxes,
data = dataTest,
contrasts = FALSE,
sparse = TRUE
)
prediction.xgb <- predict(model.xgb, newdata = dataTest.xgb)
dataTest$forecastlines <-
predict(model.xgb, newdata = dataTest.xgb)
dataTest$delta <- dataTest$forecastlines - dataTest$WHSLINES
dataTest$error_rate <-
(dataTest$forecastlines - dataTest$WHSLINES) / dataTest$WHSLINES
dataTest$error_rate_abs <-
abs((dataTest$forecastlines - dataTest$WHSLINES) / dataTest$WHSLINES)
currentDate <- Sys.Date()
csvFileName <-
paste("forecast_whselines_0",
var_whse,
"_",
currentDate,
".csv",
sep = "")
write.csv(dataTest, file = csvFileName)
sqlquery <- paste(
"SELECT
workday_workday AS WORKDAY,
workday_weekofmon AS MONTHWEEK,
workday_weekday AS WEEKDAY,
workday_dayofmon AS MONTHDAY,
workday_month AS MONTH,
YEAR(workday_date) AS YEAR,
workday_befvac AS BEFVAC,
workday_aftvac AS AFTVAC,
workday_befchrist AS BEFCHR,
workday_aftchrist AS AFTCHR,
0 as WHSLINES
FROM
gillingham.workdayofweek
LEFT JOIN gillingham.fcast_dateexcl on exclude_date = workday_date
WHERE
workday_date between '",
predstart_date,
"' and '",
predend_date,
"'
and (workday_befvac + workday_aftvac + workday_befchrist + workday_aftchrist) = 0
and exclude_date is null
ORDER BY workday_date",
sep = ""
)
preddata <- query(sqlquery)
data_new_lines <-
build.x(
data_formula_boxes,
data = preddata,
contrasts = FALSE,
sparse = TRUE
)
if (var_tier == '%') {
tierinsert = 'ALL'
} else{
tierinsert =var_tier
}
sqlquery <- paste(
"SELECT
0,workday_date, ",
s,
", '",
tierinsert,
"'
FROM
gillingham.workdayofweek
LEFT JOIN gillingham.fcast_dateexcl on exclude_date = workday_date
WHERE
workday_date between '",
predstart_date,
"' and '",
predend_date,
"'
and (workday_befvac + workday_aftvac + workday_befchrist + workday_aftchrist) = 0
and exclude_date is null
ORDER BY workday_date",
sep = ""
)
forecast_insert <- query(sqlquery)
forecast_insert$lines <-
predict(model.xgb, newdata = data_new_lines)
forecast_insert$seed02 <- 0
forecast_insert$seed03 <- 0
rmysql_update(mychannel,
forecast_insert,
'gillingham.forecast_whselines_tier',
verbose = FALSE)
}
}
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines.r')
#lapply( dbListConnections( dbDriver( drv = "MySQL")), dbDisconnect)
source('connections.R')
source('RMySQL_Update.R')
var_whse <- 'GB0001'
query <- function(...)
dbGetQuery(mychannel, ...)
date_today <- Sys.Date()
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines.r')
parametersGrid <-  expand.grid(eta = 0.1,
colsample_bytree=c(0.5,0.7),
max_depth=c(3,6),
nrounds=100,
gamma=1,
min_child_weight=2
)
View(parametersGrid)
ControlParamteres <- trainControl(method = "cv",
number = 5,
savePredictions = TRUE,
classProbs = TRUE
)
View(ControlParamteres)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
View(parametersGrid)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
View(xgb_grid_1)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
install.packages(caret)
install.packages("caret")
install.packages("caret")
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
View(data)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
xgb_tune <-train(
data=xgTrain_box,
method="xgbTree",
trControl=xgb_trcontrol_1,
tuneGrid=xgb_grid_1,
verbose=T,
metric="Kappa",
nthread =3
)
xgb_tune <-train(x=data_formula_boxes,
data=xgTrain_box,
method="xgbTree",
trControl=xgb_trcontrol_1,
tuneGrid=xgb_grid_1,
verbose=T,
metric="Kappa",
nthread =3
)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
xgb_tune <-train(data_formula_boxes,
data=dataTrain,
method="xgbTree",
trControl=cv.ctrl,
tuneGrid=xgb.grid,
verbose=T,
metric="rmse",
nthread =3
)
xgb.grid <- expand.grid(nrounds = 1000,
eta = c(0.01,0.05,0.1),
max_depth = c(2,4,6,8,10,14),
gamma=1,
colsample_bytree = .2,
min_child_weight = 1,
subsample = 1
)
View(xgb.grid)
xgb_tune <-train(data_formula_boxes,
data=dataTrain,
method="xgbTree",
trControl=cv.ctrl,
tuneGrid=xgb.grid,
verbose=T,
metric="rmse",
nthread =3
)
xgb_tune
prediction.xgb <- predict(xgb_tune, newdata = dataTest.xgb)
dataTest.xgb <-
build.x(
data_formula_boxes,
data = dataTest,
contrasts = FALSE,
sparse = TRUE
)
prediction.xgb <- predict(xgb_tune, newdata = dataTest.xgb)
prediction.xgb <- predict(xgb_tune, newdata = dataTest)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
View(xgb_tune)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
lapply(dbListConnections(dbDriver(drv = "MySQL")), dbDisconnect)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
View(preddata)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
lapply(dbListConnections(dbDriver(drv = "MySQL")), dbDisconnect)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
warnings()
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
View(xgb_tune)
xgb_tuen
xgb_tune
xgb_tune.RMSE.min()
min_MSE <- which.min(xgb_tune$cv.error)
min_MSE <- which.min(xgb_tune$RMSE)
which.min(xgb_tune$RMSE)
which.min(xgb_tune$cv.error)
which.min(xgb_tune)
which.min(xgb_tune$results)
xgb_tune$bestTune
besttunes <- gb_tune$bestTune
besttunes <- xgb_tune$bestTune
besttunes
besttunes <- xgb_tune$bestTune
besttunes
resultlis <- list()
resultlis[[1]] <- xgb_tune$bestTune
View(resultlis)
resultlis[[2]] <- xgb_tune$bestTune
View(resultlis)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
View(resultlis)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
View(resultlis)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
lapply(dbListConnections(dbDriver(drv = "MySQL")), dbDisconnect)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_ci.R')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_ci.R')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_ci.R')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_ci.R')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_ci.R')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_ci.R')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_ci.R')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
View(list_tier)
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_gillwhselines_gridtest.r')
source('C:/Users/19722/Desktop/forecast_whselines/fcast_ci.R')
